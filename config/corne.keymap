/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&sk {
    release-after-ms = <900>;
    quick-release;
};

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_lt";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base_layer {
            bindings = <
&kp LGUI   &kp Q            &kp W        &kp E                &kp R      &kp T         &kp Y        &kp U               &kp I      &kp O          &kp P     &kp LBKT
&kp ENTER  &kp A            &kp S        &kp D                &kp F      &kp G         &kp H        &kp J               &kp K      &kp L          &kp SEMI  &kp APOS
&lt 1 TAB  &kp NON_US_BSLH  &hrm RALT Z  &kp X                &kp C      &kp V         &kp N        &kp M               &kp COMMA  &hrm RALT DOT  &kp FSLH  &kp RBKT
                                         &mt LEFT_ALT ESCAPE  &sk LCTRL  &sk LSHIFT    &lt 3 SPACE  &mt RALT BACKSPACE  &kp DEL
            >;
        };

        Nav_Layer {
            bindings = <
&none      &none     &none     &none      &none      &none      &kp LC(LBKT)  &kp PG_UP     &kp UP       &kp PG_DN   &kp END       &kp HOME
&kp PSCRN  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none      &kp LC(M)     &kp LEFT      &kp DOWN     &kp RIGHT   &kp LA(LEFT)  &kp LA(RIGHT)
&none      &none     &kp RALT  &none      &none      &none      &kp LC(FSLH)  &kp LC(RBKT)  &kp LC(Z)    &caps_word  &kp LC(Y)     &kp INS
                               &none      &kp LSHFT  &kp DEL    &kp ENTER     &kp SPACE     &kp LA(TAB)
            >;
        };

        Media_layer {
            bindings = <
&none  &none         &kp K_PREV    &kp C_VOL_UP  &kp K_NEXT    &none                &none  &none      &none      &none     &none     &none
&none  &kp PSCRN     &kp C_PREV    &kp C_VOL_DN  &kp C_NEXT    &ext_power EP_TOG    &none  &kp LSHFT  &kp LCTRL  &kp RALT  &kp LGUI  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &out OUT_TOG         &none  &none      &none      &kp LALT  &none     &none
                                   &kp C_MUTE    &kp C_PP      &kp C_STOP           &none  &none      &none
            >;
        };

        Num_layer {
            bindings = <
&trans  &kp LS(EXCL)  &kp AT  &kp POUND  &kp DLLR  &kp LS(PRCNT)    &kp N9  &kp AMPS  &kp STAR  &kp LPAR  &kp RPAR  &kp GRAVE
&trans  &kp N1        &kp N2  &kp N3     &kp N4    &kp N5           &kp N6  &kp N7    &kp N8    &kp N9    &kp N0    &kp EQUAL
&trans  &none         &none   &none      &none     &none            &none   &none     &none     &none     &none     &kp MINUS
                              &trans     &trans    &trans           &none   &trans    &trans
            >;
        };

        Sym_Layer {
            bindings = <
&kp N1     &kp N2     &kp N5  &kp RA(Q)   &kp RA(W)   &kp GRAVE    &none      &none      &none      &none     &none     &none
&kp MINUS  &kp N6     &kp N7  &kp N9      &kp N0      &kp N3       &none      &kp RSHFT  &kp LCTRL  &kp LALT  &kp LGUI  &none
&kp RA(U)  &kp RA(I)  &kp N8  &kp RA(N9)  &kp RA(N0)  &kp EQUAL    &none      &none      &none      &kp RALT  &none     &none
                              &kp DEL     &kp LSHFT   &kp BSPC     &kp ENTER  &none      &none
            >;
        };

        Gaming {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E    &kp R      &kp T       &trans  &trans  &trans  &trans  &trans  &trans
&kp LSHFT  &kp A  &kp S  &kp D    &kp F      &kp G       &trans  &trans  &trans  &trans  &trans  &trans
&kp LCTRL  &kp Z  &kp X  &kp C    &kp V      &kp B       &trans  &trans  &trans  &trans  &trans  &trans
                         &kp ESC  &kp SPACE  &kp LALT    &trans  &trans  &trans
            >;
        };
    };
};
