/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&caps_word { continue-list = <BACKSPACE DELETE N V M H Z>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp TAB      &kp Q            &kp W  &kp E                &kp R      &kp T         &kp Y        &kp U               &kp I      &kp O       &kp P     &kp LBKT
&lt 2 ENTER  &kp A            &kp S  &kp D                &kp F      &kp G         &kp H        &kp J               &kp K      &kp L       &kp SEMI  &kp APOS
&kp LGUI     &kp NON_US_BSLH  &kp Z  &kp X                &kp C      &kp V         &kp N        &kp M               &kp COMMA  &kp PERIOD  &kp FSLH  &kp RBKT
                                     &mt LEFT_ALT ESCAPE  &kp LSHIFT   &kp LCTRL   &mt RALT BACKSPACE  &lt 1 SPACE  &kp DEL
            >;
        };

        NumSym {
            bindings = <
&trans  &kp EXCL  &kp AT  &kp POUND  &kp DLLR   &kp PERCENT    &kp CARET  &kp AMPS   &kp STAR  &kp LPAR  &kp RPAR  &none
&trans  &kp N1    &kp N2  &kp N3     &kp N4     &kp N5         &kp N6     &kp N7     &kp N8    &kp N9    &kp N0    &none
&trans  &none     &none   &kp MINUS  &kp EQUAL  &none          &none      &kp GRAVE  &none     &none     &none     &none
                          &trans     &trans     &trans         &none      &trans     &trans
            >;
        };

        NavMouse {
            bindings = <
&ext_power EP_TOG  &out OUT_TOG &kp LC(A)     &kp LC(RIGHT_BRACKET)  &kp LC(LS(RIGHT_BRACKET))  &kp LC(E)    &kp C_VOL_UP  &kp PG_UP  &kp UP    &kp PG_DN  &kp C_AL_CALC  &kp C_NEXT
&none              &bt BT_NXT   &kp LC(LBKT)  &kp LC(M)              &kp LC(FSLH)               &kp LC(H)    &kp C_MUTE    &kp LEFT   &kp DOWN  &kp RIGHT  &caps_word     &kp C_PP
&trans             &to 3        &kp LC(L)     &kp LC(Y)              &kp LC(J)                  &kp LC(K)    &kp C_VOL_DN  &kp HOME   &kp INS   &kp END    &kp PSCRN      &kp C_PREV
                                                &trans                 &trans                     &trans       &trans        &trans     &trans
            >;
        };

        Gaming {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E    &kp R      &kp T       &none  &none  &none  &none  &none  &none
&kp LSHFT  &kp A  &kp S  &kp D    &kp F      &kp G       &none  &to 0  &none  &none  &none  &none
&kp LCTRL  &kp Z  &kp X  &kp C    &kp V      &kp B       &none  &none  &none  &none  &none  &none
                         &kp ESC  &kp SPACE  &kp LALT    &none  &none  &none
            >;
        };
    };
};
