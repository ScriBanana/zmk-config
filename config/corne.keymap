/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <150>;
        };

        u_lt: u_lt {
            compatible = "zmk,behavior-hold-tap";
            label = "u_lt";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
            quick-tap-ms = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base_layer {
            bindings = <
&kp MINUS  &kp Q            &kp W        &kp E         &kp R         &kp T        &kp Y      &kp U         &kp I         &kp O          &kp P           &kp LBKT
&kp EQUAL  &hrm LGUI A      &hrm LALT S  &hrm LCTRL D  &hrm LSHFT F  &kp G        &kp H      &hrm LSHFT J  &hrm LCTRL K  &hrm RALT L    &hrm LGUI SEMI  &kp SQT
&kp TAB    &kp NON_US_BSLH  &hrm RALT Z  &kp X         &kp C         &kp V        &kp N      &kp M         &kp COMMA     &hrm LALT DOT  &kp FSLH        &kp RBKT
                                         &lt 5 DEL     &lt 3 BSPC    &lt 4 TAB    &kp ENTER  &lt 1 SPACE   &lt 2 ESC
            >;
        };

        Nav_layer {
            bindings = <
&none  &kp HOME  &kp PG_UP     &kp UP         &kp PG_DN       &kp C_AC_REDO    &none  &none           &none             &none     &none         &none
&none  &kp END   &kp LEFT      &kp DOWN       &kp RIGHT       &kp C_AC_UNDO    &none  &kp LEFT_SHIFT  &kp LEFT_CONTROL  &kp RALT  &kp LEFT_GUI  &none
&none  &kp INS   &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PASTE  &caps_word       &none  &none           &none             &kp LALT  &none         &none
                               &kp ESC        &kp BACKSPACE   &kp DEL          &none  &none           &none
            >;
        };

        Media_layer {
            bindings = <
&none  &none         &kp K_PREV    &kp C_VOL_UP  &kp K_NEXT    &none                &none  &none      &none      &none     &none     &none
&none  &none         &kp C_PREV    &kp C_VOL_DN  &kp C_NEXT    &ext_power EP_TOG    &none  &kp LSHFT  &kp LCTRL  &kp RALT  &kp LGUI  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &out OUT_TOG         &none  &none      &none      &kp LALT  &none     &none
                                   &kp C_MUTE    &kp C_PP      &kp C_STOP           &none  &none      &none
            >;
        };

        Num_layer {
            bindings = <
&none  &none     &none     &none      &none      &none    &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT   &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &kp EQUAL  &kp N4  &kp N5   &kp N6  &kp SEMI   &none
&none  &none     &kp RALT  &none      &none      &none    &kp BSLH   &kp N1  &kp N2   &kp N3  &kp GRAVE  &none
                           &none      &none      &none    &kp MINUS  &kp N0  &kp DOT
            >;
        };

        Sym_layer {
            bindings = <
&none  &none     &none     &none      &none      &none    &kp LBRC   &kp AMPS  &kp ASTRK  &kp LPAR   &kp RBRC   &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none    &kp PLUS   &kp DLLR  &kp PRCNT  &kp CARET  &kp COLON  &none
&none  &none     &kp RALT  &none      &none      &none    &kp PIPE   &kp EXCL  &kp AT     &kp HASH   &kp TILDE  &none
                           &none      &none      &none    &kp UNDER  &kp LPAR  &kp RPAR
            >;
        };

        NavTest_Layer {
            bindings = <
&none      &kp HOME  &kp PG_UP     &kp UP         &kp PG_DN       &kp C_AC_REDO    &kp LC(X)  &kp PG_UP  &kp UP     &kp PG_DN   &kp END       &kp HOME
&kp PSCRN  &kp END   &kp LEFT      &kp DOWN       &kp RIGHT       &kp C_AC_UNDO    &kp LC(C)  &kp LEFT   &kp DOWN   &kp RIGHT   &kp LA(LEFT)  &kp LA(RIGHT)
&none      &kp INS   &kp C_AC_CUT  &kp C_AC_COPY  &kp C_AC_PASTE  &caps_word       &kp LC(V)  &kp LC(Z)  &kp LC(Y)  &caps_word  &kp LC(F)     &kp INS
                                   &none          &kp BACKSPACE   &kp DEL          &none      &none      &none
            >;
        };
    };
};
